
-------------------------------------------------------------------------------
-- Copyright 2018.
-- CSIRO.
-- All Rights Reserved.
--  
--
--   File Name:      adc_spi_engine.tben
--   Type:           TBEN
--   Designer:       J. Tuthill
--   Created:        Sun Oct 07 18:31:59 2018
--   Template Rev:   2.0
--
--   Title:          Testbench for ADC_SPI_ENGINE.
--   Description:
--              This file was automatically generated.
--              Do not edit!
--   
--   
--   
--   
--   The following is updated by RCS/CVS.
--   Modification History:
--   $Log$
--
-- 
-------------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;



use std.textio.all;                     -- Text Input/Output.


-- User defined use clauses




-------------------------------------------------------------------------------
entity adc_spi_engine_tben is

end adc_spi_engine_tben;

-------------------------------------------------------------------------------
architecture tben of adc_spi_engine_tben is

   ---------------------------------------------------------------------------
   --                          CONSTANT DECLARATIONS                        --
   ---------------------------------------------------------------------------


   ---------------------------------------------------------------------------
   --                          SIGNAL DECLARATIONS                          --
   ---------------------------------------------------------------------------
   signal spi_clk         : std_logic;
   signal reset           : std_logic;
   signal adc_spi_rw      : std_logic;
   signal adc_spi_rw_done : std_logic;
   signal adc_wr_en       : std_logic;
   signal cmd_addr        : std_logic_vector(6 downto 0);
   signal byte_cnt        : std_logic_vector(4 downto 0);
   signal adc_din         : std_logic_vector(7 downto 0);
   signal adc_dout        : std_logic_vector(7 downto 0);
   signal adc_spi_cs      : std_logic;
   signal adc_spi_sclk    : std_logic;
   signal adc_spi_dout    : std_logic;
   signal next_byte       : std_logic;
   signal adc_spi_din     : std_logic;


   ---------------------------------------------------------------------------
   --                        COMPONENT DECLARATIONS                         --
   ---------------------------------------------------------------------------


   component adc_spi_engine
      port (
         spi_clk         : in  std_logic;
         reset           : in  std_logic;
         adc_spi_rw      : in  std_logic;
         adc_spi_rw_done : out std_logic;
         adc_wr_en       : in  std_logic;
         cmd_addr        : in  std_logic_vector(6 downto 0);
         byte_cnt        : in  std_logic_vector(4 downto 0);
         adc_din         : in  std_logic_vector(7 downto 0);
         next_byte       : out std_logic;
         adc_dout        : out std_logic_vector(7 downto 0);
         adc_spi_cs      : out std_logic;
         adc_spi_sclk    : out std_logic;
         adc_spi_dout    : out std_logic;
         adc_spi_din     : in  std_logic);
   end component;


   component adc_spi_engine_vgen
      port (
         spi_clk         : buffer std_logic;
         reset_dly       : buffer std_logic;
         adc_spi_rw_dly  : buffer std_logic;
         adc_spi_rw_done : in     std_logic;
         byte_cnt_dly    : buffer std_logic_vector(4 downto 0);
         adc_wr_en_dly   : buffer std_logic;
         cmd_addr_dly    : buffer std_logic_vector(6 downto 0);
         adc_din_dly     : buffer std_logic_vector(7 downto 0);
         next_byte       : in     std_logic;
         adc_dout        : in     std_logic_vector(7 downto 0);
         adc_spi_cs      : in     std_logic;
         adc_spi_sclk    : in     std_logic;
         adc_spi_dout    : in     std_logic;
         adc_spi_din_dly : buffer std_logic
         );
   end component;



begin
   ---------------------------------------------------------------------------
   --                    INSTANTIATE COMPONENTS                             --
   ---------------------------------------------------------------------------
   dut : adc_spi_engine
      port map (
         spi_clk         => spi_clk,
         reset           => reset,
         adc_spi_rw      => adc_spi_rw,
         adc_spi_rw_done => adc_spi_rw_done,
         adc_wr_en       => adc_wr_en,
         cmd_addr        => cmd_addr,
         byte_cnt        => byte_cnt,
         adc_din         => adc_din,
         next_byte       => next_byte,
         adc_dout        => adc_dout,
         adc_spi_cs      => adc_spi_cs,
         adc_spi_sclk    => adc_spi_sclk,
         adc_spi_dout    => adc_spi_dout,
         adc_spi_din     => adc_spi_din);



   vgen : adc_spi_engine_vgen
      port map (
         spi_clk         => spi_clk,
         reset_dly       => reset,
         adc_spi_rw_dly  => adc_spi_rw,
         adc_spi_rw_done => adc_spi_rw_done,
         adc_wr_en_dly   => adc_wr_en,
         cmd_addr_dly    => cmd_addr,
         byte_cnt_dly    => byte_cnt,
         adc_din_dly     => adc_din,
         next_byte       => next_byte,
         adc_dout        => adc_dout,
         adc_spi_cs      => adc_spi_cs,
         adc_spi_sclk    => adc_spi_sclk,
         adc_spi_dout    => adc_spi_dout,
         adc_spi_din_dly => adc_spi_din
         );


   ---------------------------------------------------------------------------
   --                        CONCURRENT SIGNAL ASSIGNMENTS                  --
   ---------------------------------------------------------------------------


   ---------------------------------------------------------------------------
   --                         CONCURRENT PROCESSES                          --
   ---------------------------------------------------------------------------


end tben;
